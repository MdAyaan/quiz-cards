{"version":3,"sources":["components/Card.js","components/CardList.js","components/Header.js","components/App.js","index.js"],"names":["Card","card","useState","height","setHeight","flip","setFlip","frontEl","useRef","backEl","setMaxHeight","frontHeight","current","clientHeight","backHeight","Math","max","useEffect","question","answer","options","window","addEventListener","removeEventListener","className","style","onClick","ref","map","option","CardList","cards","id","Header","useContext","HeaderContext","handleSubmit","categories","categoryEl","amountEl","onSubmit","htmlFor","category","value","name","type","min","defaultValue","step","createContext","App","setCards","setCategories","headerContextValue","e","preventDefault","renderQuestion","axios","get","params","amount","then","res","data","results","eachQuestion","index","incorrect_answers","a","decodeString","correct_answer","Date","now","sort","random","str","textArea","document","createElement","innerHTML","trivia_categories","Provider","ReactDOM","render","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.d58dd6ff.chunk.js","sourcesContent":["import React, { useState, useEffect, useRef } from \"react\"\r\n\r\nexport default function Card({ card }) {\r\n  \r\n  const [height, setHeight] = useState('initial')\r\n  const [flip, setFlip] = useState(false)  \r\n  \r\n  const frontEl = useRef()\r\n  const backEl = useRef()\r\n\r\n  function setMaxHeight() { \r\n    const frontHeight = frontEl.current.clientHeight\r\n    const backHeight = backEl.current.clientHeight\r\n    setHeight(Math.max(100, frontHeight, backHeight))\r\n  }\r\n  \r\n  useEffect(setMaxHeight,[card.question, card.answer, card.options])\r\n  useEffect(() => {\r\n    window.addEventListener('resize', setMaxHeight)\r\n    return () => window.removeEventListener('resize', setMaxHeight)\r\n  }, [])\r\n\r\n  \r\n  return ( \r\n    <div \r\n      className = { `card ${ flip ? 'flip' : '' }` } \r\n      style={{height: height}}\r\n      onClick={() => {\r\n       setFlip(!flip)\r\n      }}\r\n    >\r\n      <div className=\"front\" ref ={frontEl}>\r\n        {card.question}\r\n        <div className=\"card-options\">\r\n          {card.options.map(\r\n            option => { \r\n              return <div className=\"card-option\" key={option}>{option}</div>\r\n            }\r\n          )}\r\n        </div>\r\n      </div>      \r\n      <div className=\"back\" ref ={backEl}>\r\n        {card.answer}  \r\n      </div> \r\n    </div>\r\n  )\r\n}\r\n","import React from 'react'\r\nimport Card from './Card'\r\n\r\nexport default function CardList({ cards }) {\r\n  return (\r\n    <div className='card-grid'>\r\n      {cards.map( card => {\r\n        return <Card card={card} key={card.id} />\r\n      })}\r\n    </div>\r\n  )\r\n}\r\n","import React, {useContext} from 'react'\r\nimport { HeaderContext } from './App'\r\n\r\nexport default function Header() {\r\n  const {\r\n    handleSubmit,\r\n    categories,\r\n    categoryEl,\r\n    amountEl\r\n  } = useContext(HeaderContext)\r\n\r\n\r\n  return (\r\n    <>\r\n      <form className=\"header\" onSubmit={handleSubmit}> \r\n        <div className=\"form-group\">\r\n          <label htmlFor =\"category\"> Category </label>\r\n          <select id=\"category\" ref={categoryEl}>\r\n            {categories.map(category => {\r\n              return <option value={category.id} key={category.id}>{category.name}</option>\r\n            })}\r\n          </select>\r\n        </div>\r\n        <div className=\"form-group\">\r\n          <label htmlFor =\"amount\"> Number of Questions </label> \r\n          <input type=\"number\" id=\"amount\" min=\"1\" defaultValue=\"10\" step=\"1\" ref={amountEl}></input>\r\n        </div>\r\n        <div className=\"form-group\">\r\n          <button className=\"btn\">Generate</button>\r\n        </div>\r\n      </form>     \r\n    </>\r\n  )\r\n\r\n}\r\n","import React, { useState, useEffect, useRef, createContext } from 'react'\nimport CardList from './CardList'\nimport '../css/app.css'\nimport axios from 'axios'\nimport Header from './Header'\n\nexport const HeaderContext = createContext()\n\nfunction App() { \n  const [cards, setCards] = useState([])\n  const [categories, setCategories] = useState([])\n  const categoryEl = useRef()\n  const amountEl = useRef()\n\n  const headerContextValue = {\n    handleSubmit,\n    categories,\n    categoryEl,\n    amountEl\n  }\n\n  useEffect(() => { \n    axios.get('https://opentdb.com/api_category.php')\n    .then( res => setCategories(res.data.trivia_categories) ) \n  },[])\n \n  \n  useEffect( renderQuestion,[])\n\n  function renderQuestion() {\n    axios\n    .get('https://opentdb.com/api.php', {\n      params: {\n        amount: amountEl.current.value,\n        category: categoryEl.current.value\n      }\n    })\n      .then( res => {\n        setCards(res.data.results.map(((eachQuestion, index) => { \n          const option = [ ...eachQuestion.incorrect_answers.map( a => decodeString(a) ) , decodeString(eachQuestion.correct_answer)] \n          return {\n            id: `${index}-${Date.now()}`,\n            question: decodeString(eachQuestion.question),\n            answer: decodeString(eachQuestion.correct_answer),\n            options: option.sort(() => Math.random() - 0.5 )  \n          }\n        })))\n      })\n  }\n\n  function decodeString( str ) {\n    const textArea = document.createElement('textarea')\n    textArea.innerHTML = str\n    return textArea.value\n  }\n\n  function handleSubmit(e) { \n    e.preventDefault()\n    renderQuestion()\n  }\n\n  return ( \n    <HeaderContext.Provider value = {headerContextValue} >\n      <Header /> \n      <div className=\"container\">   \n        <CardList cards={cards}/>\n      </div>\n      \n    </HeaderContext.Provider>\n  );\n}\n \nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './components/App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n \n"],"sourceRoot":""}